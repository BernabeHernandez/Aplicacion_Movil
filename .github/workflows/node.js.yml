name: CI/CD Pipeline - React Native + Expo

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main", "develop"]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Instalar dependencias
        run: npm ci

      - name: Verificar entorno Expo
        run: npx expo-doctor || echo "Verificación de Expo completada"

  pruebas-unitarias:
    name: Pruebas Unitarias
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - run: npm ci
      - run: npm run test:ci

  pruebas-integracion:
    name: Pruebas de Integración
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - run: npm ci
      - run: npm run test:integration

  pruebas-e2e:
    name: Pruebas End-to-End (E2E)
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - run: npm ci
      - run: npm run test:e2e

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [pruebas-unitarias, pruebas-integracion, pruebas-e2e]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: Desplegar aplicación
        run: |
          echo "Todas las pruebas pasaron correctamente."
          echo "Desplegando aplicación Expo..."
          # Aquí iría tu comando real de despliegue, por ejemplo:
          # eas build --platform android --non-interactive
