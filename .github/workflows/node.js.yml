name: CI/CD Pipeline - React Native + Expo

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main", "develop"]

jobs:
  pruebas-unitarias:
    name: Pruebas Unitarias
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - run: npm ci
      - run: npm run test:ci

  pruebas-integracion:
    name: Pruebas de Integración
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - run: npm ci
      - run: npm run test:integration

  pruebas-e2e:
    name: Pruebas End-to-End (E2E)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - run: npm ci
      - run: npm run test:e2e

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [pruebas-unitarias, pruebas-integracion, pruebas-e2e]
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Instalar dependencias
        run: npm ci

      - name: Verificar entorno Expo
        run: npx expo-doctor || echo "Verificación de Expo completada"

      - name: Configurar Java (JDK 17)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Configurar Android SDK
        uses: android-actions/setup-android@v3

      - name: Configurar Expo y EAS
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Generar APK con EAS Build
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: |
          echo "Generando APK con EAS Build..."
          eas build --platform android --profile preview --non-interactive --wait

      - name: Descargar APK generado
        run: |
          echo "Obteniendo URL del APK..."
          BUILD_INFO=$(eas build:list --platform=android --limit=1 --json --non-interactive)
          BUILD_ID=$(echo $BUILD_INFO | jq -r '.[0].id')
          ARTIFACT_URL=$(echo $BUILD_INFO | jq -r '.[0].artifacts.buildUrl')
          
          echo "Build ID: $BUILD_ID"
          echo "Artifact URL: $ARTIFACT_URL"
          
          if [ "$ARTIFACT_URL" != "null" ] && [ -n "$ARTIFACT_URL" ]; then
            echo "Descargando APK desde URL..."
            curl -L -o app-release.apk "$ARTIFACT_URL"
          else
            echo "No se encontró URL de descarga. Intentando método alternativo..."
            eas build:view $BUILD_ID --json > build_details.json
            ARTIFACT_URL=$(cat build_details.json | jq -r '.artifacts.buildUrl')
            curl -L -o app-release.apk "$ARTIFACT_URL"
          fi
          
      - name: Verificar APK descargado
        run: |
          if [ -f app-release.apk ]; then
            echo "APK descargado exitosamente"
            ls -lh app-release.apk
          else
            echo "Error: No se pudo descargar el APK"
            exit 1
          fi

      - name: Subir APK como artefacto
        uses: actions/upload-artifact@v4
        with:
          name: FarmaMedic-Android
          path: app-release.apk
          retention-days: 30

  # El despliegue final de la aplicación se realiza en Expo
  deploy:
    name: Deploy a Expo
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: production
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4
      
      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      
      - name: Instalar dependencias
        run: npm ci
      
      - name: Configurar Expo y EAS
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
      
      - name: Deploy a Expo
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: |
          echo "Publicando actualización en Expo..."
          eas update --auto --non-interactive